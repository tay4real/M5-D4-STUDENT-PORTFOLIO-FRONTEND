[{"C:\\Users\\SITA-SOFT\\Documents\\GitHub\\Strive-School-Fall-20\\Homework\\Module_5\\student-portfolio-client\\src\\index.js":"1","C:\\Users\\SITA-SOFT\\Documents\\GitHub\\Strive-School-Fall-20\\Homework\\Module_5\\student-portfolio-client\\src\\reportWebVitals.js":"2","C:\\Users\\SITA-SOFT\\Documents\\GitHub\\Strive-School-Fall-20\\Homework\\Module_5\\student-portfolio-client\\src\\App.js":"3","C:\\Users\\SITA-SOFT\\Documents\\GitHub\\Strive-School-Fall-20\\Homework\\Module_5\\student-portfolio-client\\src\\components\\Layout.jsx":"4","C:\\Users\\SITA-SOFT\\Documents\\GitHub\\Strive-School-Fall-20\\Homework\\Module_5\\student-portfolio-client\\src\\components\\HeaderNav.jsx":"5","C:\\Users\\SITA-SOFT\\Documents\\GitHub\\Strive-School-Fall-20\\Homework\\Module_5\\student-portfolio-client\\src\\components\\SideNav.jsx":"6"},{"size":449,"mtime":1607633745101,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":180,"mtime":1607640465084,"results":"10","hashOfConfig":"8"},{"size":941,"mtime":1607650062511,"results":"11","hashOfConfig":"8"},{"size":1670,"mtime":1607651244764,"results":"12","hashOfConfig":"8"},{"size":874,"mtime":1607651652201,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hjxb9p",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\SITA-SOFT\\Documents\\GitHub\\Strive-School-Fall-20\\Homework\\Module_5\\student-portfolio-client\\src\\index.js",[],"C:\\Users\\SITA-SOFT\\Documents\\GitHub\\Strive-School-Fall-20\\Homework\\Module_5\\student-portfolio-client\\src\\reportWebVitals.js",[],"C:\\Users\\SITA-SOFT\\Documents\\GitHub\\Strive-School-Fall-20\\Homework\\Module_5\\student-portfolio-client\\src\\App.js",[],["29","30"],"C:\\Users\\SITA-SOFT\\Documents\\GitHub\\Strive-School-Fall-20\\Homework\\Module_5\\student-portfolio-client\\src\\components\\Layout.jsx",["31"],"import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport HeaderNav from \"./HeaderNav\";\r\nimport SideNav from \"./SideNav\";\r\n\r\nexport default class Layout extends Component {\r\n  state = {\r\n    isNavOpen: true,\r\n  };\r\n\r\n  onNavToggle = () => {\r\n    this.setState({\r\n      isNavOpen: !this.state.isNavOpen,\r\n    });\r\n  };\r\n  render() {\r\n    const { isNavOpen } = this.state;\r\n\r\n    return (\r\n      <Container fluid className=\"p-0 m-0\">\r\n        <HeaderNav\r\n          isNavOpen={this.state.isNavOpen}\r\n          onNavToggle={this.onNavToggle}\r\n        />\r\n        <Row className=\"p-0 m-0\">\r\n          {this.state.isNavOpen && (\r\n            <Col xs={3} className=\"bg-dark\" style={{ maxHeight: \"100vh\" }}>\r\n              <SideNav isNavOpen={this.state.isNavOpen} />\r\n            </Col>\r\n          )}\r\n          <Col className=\"bg-light\"></Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\SITA-SOFT\\Documents\\GitHub\\Strive-School-Fall-20\\Homework\\Module_5\\student-portfolio-client\\src\\components\\HeaderNav.jsx",["32"],"import React, { Component } from \"react\";\r\nimport {\r\n  Nav,\r\n  Navbar,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\n\r\nclass HeaderNav extends Component {\r\n  state = {\r\n    isSearchOpen: false,\r\n  };\r\n\r\n  onSearchToggle = () => {\r\n    this.setState({\r\n      isSearchOpen: !this.state.isSearchOpen,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Navbar className=\"py-3\" style={{ backgroundColor: \"#111111\" }}>\r\n        <Button variant=\"outline-light\">\r\n          <i class=\"fas fa-bars >\" onClick={this.props.onNavToggle}></i>\r\n        </Button>\r\n\r\n        <Navbar.Brand href=\"#home\" className=\"text-light\">\r\n          <Row className=\"no-gutters\">\r\n            <Col className=\"px-2\">\r\n              <i class=\"fas fa-user-graduate\"></i>\r\n            </Col>\r\n            <Col>Students Portfolio</Col>\r\n          </Row>\r\n        </Navbar.Brand>\r\n\r\n        <Nav defaultActiveKey=\"/home\" className=\"ml-auto \">\r\n          {this.state.isSearchOpen && (\r\n            <Form inline>\r\n              <FormControl\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                className=\"mr-sm-2\"\r\n              />\r\n            </Form>\r\n          )}\r\n          <Button variant=\"outline-light\">\r\n            <i class=\"fas fa-search\" onClick={this.onSearchToggle}></i>\r\n          </Button>\r\n          <Nav.Link eventKey=\"link-1\" className=\"text-white\">\r\n            <i class=\"fab fa-github\"></i>\r\n          </Nav.Link>\r\n          <Nav.Link eventKey=\"link-1\" className=\"text-white\">\r\n            Release v1.0\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderNav;\r\n","C:\\Users\\SITA-SOFT\\Documents\\GitHub\\Strive-School-Fall-20\\Homework\\Module_5\\student-portfolio-client\\src\\components\\SideNav.jsx",["33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":18,"column":13,"nodeType":"40","messageId":"41","endLine":18,"endColumn":22},{"ruleId":"38","severity":1,"message":"42","line":5,"column":3,"nodeType":"40","messageId":"41","endLine":5,"endColumn":14},{"ruleId":"38","severity":1,"message":"43","line":2,"column":15,"nodeType":"40","messageId":"41","endLine":2,"endColumn":24},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'isNavOpen' is assigned a value but never used.","Identifier","unusedVar","'NavDropdown' is defined but never used.","'ListGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]